        -:    0:Source:/home/user/projects/cpp/algo_lections/lection_0_search.cpp
        -:    0:Graph:/home/user/projects/cpp/algo_lections/cmake-build-debug-coverage/CMakeFiles/algo_lections.dir/lection_0_search.cpp.gcno
        -:    0:Data:/home/user/projects/cpp/algo_lections/cmake-build-debug-coverage/CMakeFiles/algo_lections.dir/lection_0_search.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by user on 04.11.2021.
        -:    3://
        -:    4:
function _Z19find_element_simpleiPii called 0 returned 0% blocks executed 0%
    #####:    5:int find_element_simple(int element, int* a, int size) {
    #####:    6:    for (int i=0; i<size; i++)
    %%%%%:    6-block  0
    %%%%%:    6-block  1
branch  0 never executed
branch  1 never executed
    %%%%%:    6-block  2
    #####:    7:        if (a[i] == element)
    %%%%%:    7-block  0
branch  0 never executed
branch  1 never executed
    #####:    8:            return i;
    %%%%%:    8-block  0
    #####:    9:    return -1;
    %%%%%:    9-block  0
        -:   10:}
        -:   11:
        -:   12:
        -:   13:
function _Z7_binaryiPiii called 0 returned 0% blocks executed 0%
    #####:   14:int _binary(int element, int* a, int left, int right) {
    #####:   15:    if ((right - left) > 1) {
    %%%%%:   15-block  0
branch  0 never executed
branch  1 never executed
    #####:   16:        int center = (left + right) / 2;
    #####:   17:        if (a[center] > element)
    %%%%%:   17-block  0
branch  0 never executed
branch  1 never executed
    #####:   18:            return _binary(element, a, left, center);
    %%%%%:   18-block  0
call    0 never executed
    #####:   19:        else if (a[center] > element)
    %%%%%:   19-block  0
branch  0 never executed
branch  1 never executed
    #####:   20:            return _binary(element, a, center, right);
    %%%%%:   20-block  0
call    0 never executed
        -:   21:        else
    #####:   22:            return center;
    %%%%%:   22-block  0
        -:   23:    } else {
    #####:   24:        if (a[left] == element)
    %%%%%:   24-block  0
branch  0 never executed
branch  1 never executed
    #####:   25:            return left;
    %%%%%:   25-block  0
    #####:   26:        if (a[right] == element)
    %%%%%:   26-block  0
branch  0 never executed
branch  1 never executed
    #####:   27:            return right;
    %%%%%:   27-block  0
    #####:   28:        return -1;
    %%%%%:   28-block  0
        -:   29:    };
        -:   30:}
        -:   31:
        -:   32:
function _Z19find_element_binaryiPii called 0 returned 0% blocks executed 0%
    #####:   33:int find_element_binary(int element, int* a, int size){
    #####:   34:    return _binary(element, a, 0, size-1);
    %%%%%:   34-block  0
call    0 never executed
        -:   35:}
